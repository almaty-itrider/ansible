---
- name: sql_exporter | Check if sql_exporter is already downloaded
  ansible.builtin.stat:
    path: "{{ sql_exporter_tmp_dir }}/sql_exporter-{{ sql_exporter_version }}.linux-{{ sql_exporter_proc_arch }}/"
  register: sql_exporter_dir

- name: sql_exporter | Check installed sql_exporter version
  ansible.builtin.command: "{{ sql_exporter_install_dir }}/sql_exporter --version"
  register: get_current_sql_exporter_version_result
  failed_when: false
  changed_when: false

- name: sql_exporter | Set current sql_exporter version
  ansible.builtin.set_fact:
    current_sql_exporter_version: "{{ get_current_sql_exporter_version_result.stdout | regex_search('version ([0-9]+\\.[0-9]+\\.[0-9]+)', '\\1') | first }}"
  when: get_current_sql_exporter_version_result is succeeded

- name: sql_exporter | Download and unarchive sql_exporter
  ansible.builtin.unarchive:
    src: "{{ sql_exporter_url }}"
    dest: "{{ sql_exporter_tmp_dir }}"
    remote_src: true
  when: current_sql_exporter_version != sql_exporter_version
  notify:
    - Copy sql_exporter binary to {{ sql_exporter_install_dir }}
    - Remove sql_exporter binary from temporary directory
  register: download_sql_exporter_result

- name: sql_exporter | Copy files
  when: create_db_user_result.user is defined
  notify:
    - Restart sql_exporter
  block:
    - name: sql_exporter | Create sql_exporter configs directory
      ansible.builtin.file:
        path: "{{ sql_exporter_config_dir }}"
        state: directory
        owner: "{{ sql_exporter_user }}"
        group: "{{ sql_exporter_user }}"
        mode: "0755"

    - name: sql_exporter | Copy sql_exporter metrics file to {{ sql_exporter_config_dir }}
      ansible.builtin.copy:
        src: pg_metrics.collector.yml
        dest: "{{ sql_exporter_config_dir }}/pg_metrics.collector.yml"
        owner: "{{ sql_exporter_user }}"
        group: "{{ sql_exporter_user }}"
        mode: "0640"

    - name: sql_exporter | Copy template files
      ansible.builtin.template:
        src: "{{ __sql_exporter_item.src }}"
        dest: "{{ __sql_exporter_item.dest }}"
        owner: "{{ sql_exporter_user }}"
        group: "{{ sql_exporter_user }}"
        mode: "0640"
      loop:
        - { src: "sql_exporter.yml.j2", dest: "{{ sql_exporter_config_dir }}/sql_exporter.yml" }
        - { src: "sql_exporter.service.j2", dest: "{{ sql_exporter_service_dir }}/sql_exporter.service" }
      loop_control:
        loop_var: __sql_exporter_item
