---
- name: postgres_exporter | Check if postgres_exporter is already downloaded
  ansible.builtin.stat:
    path: "{{ postgres_exporter_tmp_dir }}/postgres_exporter-{{ postgres_exporter_version }}.linux-{{ postgres_exporter_proc_arch }}/"
  register: postgres_exporter_dir

- name: postgres_exporter | Check installed postgres_exporter version
  ansible.builtin.command: "{{ postgres_exporter_install_dir }}/postgres_exporter --version"
  register: get_current_postgres_exporter_version_result
  failed_when: false
  changed_when: false
- ansible.builtin.debug:
    var: get_current_postgres_exporter_version_result.stdout

- name: postgres_exporter | Set current postgres_exporter version
  ansible.builtin.set_fact:
    current_postgres_exporter_version: "{{ get_current_postgres_exporter_version_result.stdout | regex_search('version ([0-9]+\\.[0-9]+\\.[0-9]+)', '\\1') | first }}"
  when: get_current_postgres_exporter_version_result is succeeded

- name: postgres_exporter | Download and unarchive postgres_exporter
  ansible.builtin.unarchive:
    src: "{{ postgres_exporter_url }}"
    dest: "{{ postgres_exporter_tmp_dir }}"
    remote_src: true
  when: current_postgres_exporter_version != postgres_exporter_version
  notify:
    - Copy postgres_exporter binary to {{ postgres_exporter_install_dir }}
    - Remove postgres_exporter binary from temporary directory
  register: download_postgres_exporter_result

- name: postgres_exporter | Copy files
  when: create_db_user_result.user is defined
  notify:
    - Restart postgres_exporter
  block:
    - name: postgres_exporter | Create postgres_exporter configs directory
      ansible.builtin.file:
        path: "{{ postgres_exporter_config_dir }}"
        state: directory
        owner: "{{ postgres_exporter_user }}"
        group: "{{ postgres_exporter_user }}"
        mode: "0755"

    - name: postgres_exporter | Copy template files
      ansible.builtin.template:
        src: "{{ __postgres_exporter_item.src }}"
        dest: "{{ __postgres_exporter_item.dest }}"
        owner: "{{ postgres_exporter_user }}"
        group: "{{ postgres_exporter_user }}"
        mode: "0640"
      loop:
        - { src: "postgres_exporter.env.j2", dest: "{{ postgres_exporter_config_dir }}/postgres_exporter.env" }
        - { src: "postgres_exporter.yml.j2", dest: "{{ postgres_exporter_config_dir }}/postgres_exporter.yml" }
        - { src: "postgres_exporter.service.j2", dest: "{{ postgres_exporter_service_dir }}/postgres_exporter.service" }
      loop_control:
        loop_var: __postgres_exporter_item
